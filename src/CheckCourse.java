
import eschool.managament.system.Course;
import eschool.managament.system.CourseList;
import eschool.managament.system.PersonList;
import java.awt.Color;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import sun.misc.MessageUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Eugenio
 * 
 * THIS CLASS ALLOW THE USER TO SEE THE DETAIL OF THE COURSE OF THE SCHOOL
 * IF IT'S AN ADMIN HE CAN EVEN CHANGE SOME DETAIL OF IT
 */
public class CheckCourse extends javax.swing.JFrame {
    PersonList personList;
    CourseList courseList;
    boolean admin;
    String teacherOfCourse;
    String[] teacherList;
    /**
     
     */
    public CheckCourse() {
        courseList = new CourseList();
        personList= new PersonList();
        initComponents();
        Dimension dim = getToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getWidth() / 2, dim.height / 2 - this.getHeight() / 2);
        
        /*This method recognize who's online, if it's not an admin, it will
        hide the SAVE button, cause just the admin can change the detail
        of the courses*/
        admin = personList.isAdmin();
        saveButton.setVisible(admin);
        saveButton.enable(admin);
       
        deleteCourseButton.setEnabled(admin);
        deleteCourseButton.setVisible(admin);
        String[] list = courseList.getCourseListWithCode();
        courseChoice.add("");
        
        for(int i=0; i<list.length;i++){
            courseChoice.add(list[i]);
        }
      

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPopupMenu3 = new javax.swing.JPopupMenu();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        courseChoice = new java.awt.Choice();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        teacherLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        labe = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        startDate = new javax.swing.JFormattedTextField();
        finishDate = new javax.swing.JFormattedTextField();
        courseFees = new javax.swing.JFormattedTextField();
        errorLabel = new javax.swing.JLabel();
        courseCode = new javax.swing.JLabel();
        teacherSpinner = new java.awt.Choice();
        backButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        labelNameCourse = new javax.swing.JLabel();
        deleteCourseButton = new javax.swing.JButton();
        teacherShow = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Check and Edit Course");

        courseChoice.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                courseChoiceItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Choose one of our course");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        teacherLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        teacherLabel.setText("Teacher for the course: ");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Start Date");

        labe.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        labe.setText("Finish Date");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel6.setText("Fees (AUD / trim)");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel7.setText("Course Code");

        startDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));

        finishDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));

        courseFees.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("######"))));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(courseCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(courseFees, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(labe, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(90, 90, 90)
                            .addComponent(finishDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(teacherLabel))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startDate, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(teacherSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 41, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(teacherLabel)
                    .addComponent(teacherSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labe)
                    .addComponent(finishDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(courseFees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(courseCode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        backButton.setText("<- Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        labelNameCourse.setFont(new java.awt.Font("MS Reference Specialty", 1, 14)); // NOI18N

        deleteCourseButton.setText("Delete Course");
        deleteCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCourseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(deleteCourseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jSeparator3)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(labelNameCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 101, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(courseChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(teacherShow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(courseChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(teacherShow, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelNameCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton)
                    .addComponent(deleteCourseButton)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//This method checl which course is choosen in the spinner list and also
    //check if this course have a teacher and print it if he find one
    private void courseChoiceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_courseChoiceItemStateChanged
        errorLabel.setForeground(Color.RED);
        errorLabel.setText("");
        teacherSpinner.removeAll();
        String courseWithId=courseChoice.getSelectedItem();
        if(courseWithId.equals("") || equals(null)){
            labelNameCourse.setText("");
            courseCode.setText("");
            startDate.setText("");
            finishDate.setText("");
            courseFees.setText("");
            saveButton.setVisible(false);
        }else{
            saveButton.setVisible(admin);
            String course = courseWithId.trim().substring(9,courseWithId.length());
            Course c=courseList.getCourseDetail(course);
            teacherOfCourse = personList.teacherFromCourseCode(c.getCourseId());
            teacherList=personList.getTeacherList();
            //Method that order the teacher in the list, ready to be printed
            //the teacher of the cours eiwll be print for first
            if(teacherOfCourse.equals("Teacher not assigned yet")){
                teacherSpinner.add("Teacher not assigned yet");
            }else{
                for(int i=1;i<teacherList.length;i++)
                if(teacherList[i].equals(teacherOfCourse)){
                    String temp = teacherList[0];
                    teacherList[0]=teacherList[i];
                    teacherList[i]= temp;
                }
            }
            
            //Section who filed the spinnerList, puttin the teacher and the
            //possibility to delete the teacher from the course
                for(int i=0;i<teacherList.length;i++)
                    teacherSpinner.add(teacherList[i]);
                teacherSpinner.add("Teacher not assigned yet");
              

            
            labelNameCourse.setText(c.getCourseName());
            courseCode.setText(String.valueOf(c.getCourseId()));
            startDate.setText(c.getBeginningDate());
            finishDate.setText(c.getFinishingDate());
            courseFees.setText(String.valueOf(c.getFee()));
        }
    }//GEN-LAST:event_courseChoiceItemStateChanged

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        errorLabel.setForeground(Color.red);
        Course newCourse = new Course("", 0, "", "", 0);
        
        
        //if else loop to check if all  the data are inserted and correct
        if(startDate.getText().isEmpty()){
            errorLabel.setText("All fields are mandatory, insert start date");
        }else{
            if(finishDate.getText().isEmpty()){
                errorLabel.setText("All fields are mandatory, insert finish date");
            }else{
                if(courseFees.getText().isEmpty()){
                    errorLabel.setText("All fields are mandatory, insert course fee");
                }else{
                    //Check to see if the user change the teacher
                    if(teacherSpinner.getSelectedItem().equals(teacherOfCourse)){
                        newCourse.setCourseId(Integer.parseInt(courseCode.getText()));
                            newCourse.setCourseName(labelNameCourse.getText());
                            newCourse.setBeginningDate(startDate.getText());
                            newCourse.setFinishingDate(finishDate.getText());
                            newCourse.setFee(Integer.parseInt(courseFees.getText()));
                            courseList.updateCourse(newCourse); 
                            errorLabel.setForeground(Color.BLUE);
                            errorLabel.setText("Course update");
                    }else{
                        String newTeacher = teacherSpinner.getSelectedItem();
                        if(teacherOfCourse.equals("Teacher not assigned yet")){
                            personList.chageTeacher(Integer.parseInt(courseCode.getText()), newTeacher.substring(0, 8) );
                        }else{
                            personList.chageTeacher(Integer.parseInt(courseCode.getText()), newTeacher.substring(0, 8), teacherOfCourse.substring(0, 8));
                        }
                        int n = JOptionPane.showConfirmDialog(rootPane, "Attention!\n"
                                + "Each teacher can be assigned just to one course at "
                                + "time.\nIf this teacher is now busy he will be removed "
                                + "from his old course","Assign teacher",JOptionPane.YES_NO_OPTION);
                        if(n==0){
                            newCourse.setCourseId(Integer.parseInt(courseCode.getText()));
                            newCourse.setCourseName(labelNameCourse.getText());
                            newCourse.setBeginningDate(startDate.getText());
                            newCourse.setFinishingDate(finishDate.getText());
                            newCourse.setFee(Integer.parseInt(courseFees.getText()));
                            courseList.updateCourse(newCourse); 
                            errorLabel.setForeground(Color.BLUE);
                            errorLabel.setText("Course update"); 
                        }
                    }
                   
                        
                }
            }
        }
        
    }//GEN-LAST:event_saveButtonActionPerformed

    private void deleteCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCourseButtonActionPerformed
        /*This button allow just the admin to delete the course, before do it the program will
        show a dialog who ask the suer a double check to the operation*/
        int index = Integer.parseInt(courseChoice.getSelectedItem().substring(0,6));
        if(courseChoice.getSelectedItem().equals("") || equals(null)){
            
        }else{
            int n = JOptionPane.showConfirmDialog(rootPane, "Attention!\n"
                                + "\nErase all the data of the course? "
                                + "\nThis operation cannot be undone ",
                                "Delete Course",JOptionPane.YES_NO_OPTION);
                if(n==0){
                    courseList.deleteCourse(index);
                    errorLabel.setForeground(Color.RED);
                    errorLabel.setText(" COURSE DELETED");
                    labelNameCourse.setText("");
                    courseCode.setText("");
                    startDate.setText("");
                    finishDate.setText("");
                    courseFees.setText("");
                   
                }
        }
    }//GEN-LAST:event_deleteCourseButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

       
        dispose();

    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Enroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Enroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Enroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Enroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Enroll().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private java.awt.Choice courseChoice;
    private javax.swing.JLabel courseCode;
    private javax.swing.JFormattedTextField courseFees;
    private javax.swing.JButton deleteCourseButton;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JFormattedTextField finishDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JPopupMenu jPopupMenu3;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel labe;
    private javax.swing.JLabel labelNameCourse;
    private javax.swing.JButton saveButton;
    private javax.swing.JFormattedTextField startDate;
    private javax.swing.JLabel teacherLabel;
    private javax.swing.JLabel teacherShow;
    private java.awt.Choice teacherSpinner;
    // End of variables declaration//GEN-END:variables
}
